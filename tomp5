#!/bin/bash

# Default values
quality=55
channel_layout=""

# Function to check if the given quality value is within the valid range (5 to 100)
function check_quality_range() {
    if [ "$1" -ge 5 ] && [ "$1" -le 100 ]; then
        quality=$1
    else
        echo "Error: Quality value must be in the range of 5 to 100."
        exit 1
    fi
}

# Function to check the audio channels of the input file
function check_audio_channels() {
    channels=$(ffprobe -v error -select_streams a:0 -show_entries stream=channels -of default=noprint_wrappers=1:nokey=1 "$1")
    if [ "$channels" == "6" ]; then
        channel_layout="-channel_layout 5.1"
    fi
}

# Check if an input video file is provided
if [ -z "$1" ]; then
    echo "Error: Please provide an input video file as an argument."
    exit 1
fi

# Check for the -q argument
while getopts ":q:" opt; do
    case $opt in
        q)
            check_quality_range "$OPTARG"
            ;;
        \?)
            echo "Error: Invalid option -$OPTARG. Use -q for quality."
            exit 1
            ;;
    esac
done

# Shift the options so that $1 now refers to the input video file
shift $((OPTIND - 1))

# Input video file
input_video="$1"

# Check the audio channels of the input file
check_audio_channels "$input_video"

# Extract the quality value to include in the output filename
quality_suffix="_q${quality}"

# Output video file with quality suffix (assuming the same name with ".mp4" extension)
output_video="${input_video%.*}${quality_suffix}.mp4"

# Use ffmpeg to create the MP4 using hevc-videotoolbox codec with the specified quality and audio channel layout
ffmpeg -i "$input_video" -c:v hevc_videotoolbox -q:v $quality -movflags faststart -brand mov -tag:v hvc1 $channel_layout "$output_video"

echo "Conversion complete. Output file: $output_video"
