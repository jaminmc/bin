#!/usr/bin/env python3

import argparse
import os
import sys
from pathlib import Path

import pandas as pd


def parseExcel(excel_file, video_file):
    with pd.read_excel(excel_file) as df:
        return df.loc[df["Filename"] == video_file].iloc[0]


def parseExcel2txt(excel_file):
    df = pd.read_excel(excel_file)
    filename = Path(excel_file).parent / f"{Path(excel_file).stem}.txt"
    print(f"Textfile: {filename}")
    with open(filename, "w") as f:
        f.write("_____________________\n")
        print("_____________________")
        for _, row in df.iterrows():
            if not pd.isna(row["Air Date"]):
                for x in row.keys():
                    if x == "Air Date":
                        t = row[x].strftime("%m-%d-%Y (%a)")
                        out = str(f"{x}: {t}".strip())
                        f.write(f"{out}\n")
                        print(out)
                    elif x == "Tags(Keywords) Comma Seperated":
                        try:
                            tags = row[x].strip()
                            tagslist = [word.strip() for word in tags.split(",")]
                            tagsfromlist = ", ".join([str(x) for x in tagslist])
                            out = f"\n\nTags / Keywords: {tagsfromlist}"
                            f.write(f"{out}\n")
                            print(out)
                        except:
                            pass
                    elif x == "Episode Description":
                        out = f"{x}: \n{row[x]}".strip()
                        f.write(f"{out}\n")
                        print(out)
                    else:
                        if "Unnamed" not in x:
                            out = f"{x}: {row[x]}".strip()
                            f.write(f"{out}\n")
                            print(out)
                f.write("_____________________\n")
                print("_____________________")




def main(argv):
    parser = argparse.ArgumentParser(description="Get Info from Excel for filename")
    parser.add_argument(
        "ExcelFile",
        metavar="ExcelFile",
        type=str,
        help="The Excel file with the PIJN Info",
    )
    args = parser.parse_args()

    if not os.path.exists(args.ExcelFile):
        sys.exit(f"Excel file {args.ExcelFile} does not exist!")

    parseExcel2txt(args.ExcelFile)


if __name__ == "__main__":
    main(sys.argv[1:])
